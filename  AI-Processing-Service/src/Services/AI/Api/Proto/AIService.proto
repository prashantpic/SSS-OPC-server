syntax = "proto3";

option csharp_namespace = "AIService.Grpc";

import "google/protobuf/struct.proto";
import "google/protobuf/timestamp.proto";

package AIService.Grpc;

// The AI processing service definition.
service AiProcessingService {
  // Performs a predictive maintenance task.
  rpc GetPrediction (GetPredictionRequest) returns (GetPredictionResponse);

  // Detects anomalies in the provided data.
  rpc DetectAnomalies (DetectAnomaliesRequest) returns (DetectAnomaliesResponse);

  // Processes a natural language query.
  rpc ProcessNlq (ProcessNlqRequest) returns (ProcessNlqResponse);

  // Deploys an AI model to specified edge devices.
  rpc DeployModelToEdge (DeployModelToEdgeRequest) returns (DeployModelToEdgeResponse);
}

// Request message for GetPrediction.
message GetPredictionRequest {
  string model_id = 1;
  google.protobuf.Struct input_data = 2; // Flexible input data structure
}

// Response message for GetPrediction.
message GetPredictionResponse {
  string prediction_id = 1;
  google.protobuf.Struct output_data = 2; // Flexible output data structure
  string status_message = 3;
}

// Request message for DetectAnomalies.
message DetectAnomaliesRequest {
  string model_id = 1;
  repeated TimeSeriesDataPoint data_points = 2; // Assuming time series data
}

message TimeSeriesDataPoint {
    google.protobuf.Timestamp timestamp = 1;
    map<string, double> values = 2;
}

// Response message for DetectAnomalies.
message DetectAnomaliesResponse {
  repeated DetectedAnomaly anomalies = 1;
  string status_message = 2;
}

message DetectedAnomaly {
    google.protobuf.Timestamp timestamp = 1;
    string description = 2;
    double severity_score = 3;
    repeated string contributing_features = 4;
}

// Request message for ProcessNlq.
message ProcessNlqRequest {
  string query_text = 1;
  string user_id = 2;
  string session_id = 3;
  map<string, string> context_data = 4;
}

// Response message for ProcessNlq.
message ProcessNlqResponse {
  string intent = 1;
  repeated NlqEntity entities = 2;
  string formatted_response = 3;
  double confidence_score = 4;
}

message NlqEntity {
    string type = 1;
    string value = 2;
    double confidence = 3;
}

// Request message for DeployModelToEdge.
message DeployModelToEdgeRequest {
  string model_id = 1;
  string model_version = 2; // Optional: specific version, otherwise latest
  repeated string target_device_ids = 3;
}

// Response message for DeployModelToEdge.
message DeployModelToEdgeResponse {
  string deployment_id = 1;
  string status_message = 2;
  // Potentially more details about the deployment status per device
}