<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>net8.0</TargetFramework>
    <Nullable>enable</Nullable>
    <ImplicitUsings>enable</ImplicitUsings>
    <RootNamespace>AIService</RootNamespace>
    <UserSecretsId>dotnet-AIService-UNIQUE_GUID</UserSecretsId>
    <!-- Add if building in Docker -->
    <!-- <DockerDefaultTargetOS>Linux</DockerDefaultTargetOS> -->
    <!-- <DockerfileContext>..\..\..</DockerfileContext> -->
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="AutoMapper.Extensions.Microsoft.DependencyInjection" Version="12.0.1" />
    <PackageReference Include="Grpc.AspNetCore" Version="2.62.0" />
    <PackageReference Include="MediatR" Version="12.2.0" />
    <PackageReference Include="Microsoft.ML" Version="3.0.0" />
    <PackageReference Include="Microsoft.ML.OnnxRuntime" Version="1.16.0" />
    <!-- For GPU support with ONNX Runtime, consider Microsoft.ML.OnnxRuntime.Gpu -->
    <PackageReference Include="SharpCV" Version="0.1.2" /> <!-- Check for latest stable version -->
    <PackageReference Include="SpaCy.DotNet" Version="1.0.3" /> <!-- Check for latest stable version -->
    <PackageReference Include="Swashbuckle.AspNetCore" Version="6.5.0" />
    <PackageReference Include="TensorFlow.NET" Version="0.110.1" /> <!-- Check for latest stable version compatible with .NET 8 -->
    <!-- SciSharp.TensorFlow.Redist installs the native TensorFlow libraries. Choose CPU or GPU version. -->
    <PackageReference Include="SciSharp.TensorFlow.Redist" Version="2.11.0" />
    <!-- Or for GPU: <PackageReference Include="SciSharp.TensorFlow.Redist-Windows-GPU" Version="2.10.0" /> or similar for Linux -->

    <PackageReference Include="Serilog.AspNetCore" Version="8.0.1" />
    <PackageReference Include="Serilog.Sinks.Console" Version="5.0.1" />
    <PackageReference Include="Serilog.Sinks.File" Version="5.0.0" />
    <PackageReference Include="Serilog.Extensions.Logging" Version="8.0.0" />
    <PackageReference Include="Serilog.Settings.Configuration" Version="8.0.0" />

    <!-- For DataService gRPC Client -->
    <PackageReference Include="Grpc.Net.Client" Version="2.62.0" />
    <PackageReference Include="Google.Protobuf" Version="3.26.1" />
    <PackageReference Include="Grpc.Tools" Version="2.63.0">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
  </ItemGroup>

  <!-- This ItemGroup is for gRPC client generation if the .proto file is within this project. -->
  <!-- If REPO-DATA-SERVICE's .proto is referenced as a shared project or pre-compiled library, this might be different. -->
  <!-- Assuming DataService.proto will be added/referenced later -->
  <!--
  <ItemGroup>
    <Protobuf Include="Protos\DataService.proto" GrpcServices="Client" Link="Protos\DataService.proto" Access="Public" />
    <Protobuf Include="Api\Proto\AIService.proto" GrpcServices="Server" Access="Public" />
  </ItemGroup>
  -->
  
  <ItemGroup>
    <Content Update="appsettings.json">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
    <Content Update="appsettings.Development.json">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
  </ItemGroup>

</Project>