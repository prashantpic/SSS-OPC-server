{
  "Logging": {
    "LogLevel": {
      "Default": "Information",
      "Microsoft.AspNetCore": "Warning",
      "Ocelot": "Information",
      "Yarp.ReverseProxy": "Information"
    }
  },
  "AllowedHosts": "*",
  "Kestrel": {
    "Endpoints": {
      "Http": {
        "Url": "http://*:7200" // Default HTTP port for the gateway
      },
      "HttpsInlineCertStore": { // Example for HTTPS, adjust as needed
        "Url": "https://*:7201",
        "Certificate": {
          "Subject": "CN=localhost",
          "Store": "My",
          "Location": "CurrentUser",
          "AllowInvalid": "true" // For development only
        }
      }
    },
    "Protocols": { // Enable HTTP/2 for gRPC if Kestrel handles termination
       "Http1AndHttp2": {}
    }
  },
  "SecurityConfigs": {
    "JwtAuthority": "https://demo.duendesoftware.com", // Replace with actual Identity Provider URL
    "JwtAudience": "api_gateway_resource", // Replace with actual API audience
    "ApiKey": "SuperSecretGatewayApiKey_ChangeThisValue", // Example API Key, ensure this is securely managed
    "RequireHttpsMetadata": true // Set to false for development if not using HTTPS locally for IdP
  },
  "ServiceEndpoints": { // Base URLs for downstream services, used by GraphQL resolvers or custom logic
    "ManagementService": "http://management-service", // K8s service name or resolvable hostname
    "AiService": "http://ai-processing-service",
    "DataService": "http://data-service",
    "IntegrationService": "http://integration-service",
    "ManagementServiceGrpc": "http://management-service:5001", // gRPC endpoint
    "DataServiceGrpc": "http://data-service:5002", // gRPC endpoint
    "SecurityService": "http://security-service" // For token introspection if needed
  },
  "MqttBrokerConfig": {
    "Host": "mqtt-broker.local", // Replace with actual MQTT broker host
    "Port": 1883,
    "Username": "", // Optional
    "Password": ""  // Optional
  },
  "CacheSettings": {
    "RedisConnectionString": "localhost:6379", // Replace with actual Redis connection string
    "DefaultExpirationMinutes": 30,
    "InstanceName": "GatewayCache_" // Prefix for cache keys
  },
  "RateLimitingPolicies": { // Used by Ocelot or custom rate limiting handler
    "DefaultGlobalPolicy": {
      "Period": "1s",
      "Limit": 20
    },
    "UserSpecificPolicy": {
      "Period": "1h",
      "Limit": 1000
    },
    "StrictApiPolicy": {
      "Period": "10s",
      "Limit": 5
    }
  },
  "PollyPolicies": { // Configuration for Polly resilience policies
    "DefaultRetryCount": 3,
    "RetryDelayMilliseconds": 200, // Initial delay for retries
    "DefaultCircuitBreakerThreshold": 5, //Consecutive exceptions before breaking
    "DurationOfBreakSeconds": 30, // Duration the circuit stays open
    "DefaultTimeoutSeconds": 15 // Timeout for downstream requests
  },
  "FeatureFlags": {
    "EnableMqttProtocolHandler": true,
    "EnableSchemaValidation": false, // Set to true to enable schema validation middleware
    "EnableGraphQLPlayground": true
  },
  "AllowedCorsOrigins": [ // Configure CORS origins
    "http://localhost:3000", // Example: Local React/Angular/Vue frontend
    "https://your-production-frontend.com"
  ]
}