{
  "Serilog": {
    "MinimumLevel": {
      "Default": "Information",
      "Override": {
        "Microsoft": "Warning",
        "System": "Warning",
        "Opc.Ua": "Warning"
      }
    },
    "WriteTo": [
      {
        "Name": "Console",
        "Args": {
          "outputTemplate": "[{Timestamp:HH:mm:ss} {Level:u3}] {Message:lj} <s:{SourceContext}>{NewLine}{Exception}"
        }
      },
      {
        "Name": "File",
        "Args": {
          "path": "logs/opc-client-.log",
          "rollingInterval": "Day",
          "retainedFileCountLimit": 7,
          "fileSizeLimitBytes": 104857600,
          "rollOnFileSizeLimit": true,
          "outputTemplate": "{Timestamp:yyyy-MM-dd HH:mm:ss.fff zzz} [{Level:u3}] ({ProcessId}/{ThreadId}) {Message:lj} <s:{SourceContext}>{NewLine}{Exception}"
        }
      }
    ],
    "Enrich": [
      "FromLogContext",
      "WithMachineName",
      "WithProcessId",
      "WithThreadId"
    ],
    "Properties": {
      "Application": "IndustrialAutomation.OpcClient"
    }
  },
  "OpcClient": {
    "ClientId": "Client_Default_001",
    "ServerConnections": [
      {
        "ServerId": "OPC_UA_Sim_1",
        "Standard": "Ua",
        "EndpointUrl": "opc.tcp://localhost:4840",
        "SecurityPolicyUri": "http://opcfoundation.org/UA/SecurityPolicy#None",
        "MessageSecurityMode": "None",
        "UserIdentityType": "Anonymous",
        "Username": "",
        "Password": "",
        "ClientCertificatePath": "",
        "ClientPrivateKeyPath": "",
        "AutoAcceptUntrustedCertificates": true,
        "ConnectTimeoutSeconds": 10,
        "SessionTimeoutMinutes": 20
      }
    ],
    "TagImport": {
      "FilePath": "config/tags.csv",
      "FileType": "CSV",
      "ServerIdForAllTags": "OPC_UA_Sim_1", // Optional: If all tags in the file belong to one server
      "OverwriteExisting": true
    },
    "UaSubscriptions": [
      {
        "Id": "PressureAndTempSensors",
        "ServerId": "OPC_UA_Sim_1",
        "PublishingInterval": 1000,
        "LifetimeCount": 1200, // 1200 * 1000ms = 20 minutes
        "MaxKeepAliveCount": 5,
        "MaxNotificationsPerPublish": 1000,
        "PublishingEnabled": true,
        "Priority": 0,
        "MonitoredItems": [
          {
            "TagId": "Sim.PressureSensor1", // This should map to a TagDefinitionDto.Id
            "NodeId": "ns=2;s=SimulatedDevices/DeviceA/Pressure", // Example NodeId
            "SamplingInterval": 500,
            "QueueSize": 10,
            "DiscardOldest": true,
            "DataChangeTrigger": "StatusValueTimestamp" // "StatusValue", "Status", "StatusValueTimestamp"
          },
          {
            "TagId": "Sim.TemperatureSensor1",
            "NodeId": "ns=2;s=SimulatedDevices/DeviceA/Temperature", // Example NodeId
            "SamplingInterval": 1000,
            "QueueSize": 5,
            "DiscardOldest": true,
            "DataChangeTrigger": "StatusValueTimestamp"
          }
        ]
      }
    ]
  },
  "ServerApp": {
    "CommunicationMethod": "Grpc", // "Grpc", "RabbitMq", "Kafka"
    "GrpcEndpoint": "https://localhost:7001", // Example server gRPC endpoint
    "MessageQueue": {
      "RabbitMq": {
        "ConnectionString": "amqp://guest:guest@localhost:5672/",
        "UseTls": false,
        "RealtimeDataTopic": "opc.client.realtime.data",
        "HistoricalDataTopic": "opc.client.historical.data",
        "AlarmEventTopic": "opc.client.alarm.events",
        "CriticalWriteLogTopic": "opc.client.critical.writes",
        "AuditEventTopic": "opc.client.audit.events",
        "SubscriptionStatusTopic": "opc.client.subscription.status",
        "EdgeAiOutputTopic": "opc.client.edgeai.output",
        "ClientHealthStatusTopic": "opc.client.health.status" // For MQ, if health is not gRPC
      },
      "Kafka": {
        "BrokerList": "localhost:9092",
        "SecurityProtocol": "Plaintext", // "Plaintext", "Ssl", "SaslSsl"
        "SslCaLocation": "",
        "SaslMechanism": "", // "Gssapi", "Plain", "ScramSha256", "ScramSha512"
        "SaslUsername": "",
        "SaslPassword": "",
        "RealtimeDataTopic": "opc-client-realtime-data",
        "HistoricalDataTopic": "opc-client-historical-data",
        "AlarmEventTopic": "opc-client-alarm-events",
        "CriticalWriteLogTopic": "opc-client-critical-writes",
        "AuditEventTopic": "opc-client-audit-events",
        "SubscriptionStatusTopic": "opc-client-subscription-status",
        "EdgeAiOutputTopic": "opc-client-edgeai-output",
        "ClientHealthStatusTopic": "opc-client-health-status" // For MQ
      }
    }
  },
  "EdgeAI": {
    "Enabled": false,
    "ModelRepositoryPath": "ai_models/",
    "ActiveModels": [
      {
        "ModelName": "AnomalyDetector_Pressure_v1",
        "Version": "1.0.0",
        "FilePath": "AnomalyDetector_Pressure_v1/model.onnx", // Relative to ModelRepositoryPath
        "InputTagIds": ["Sim.PressureSensor1"], // Tags providing input features
        "OutputTopic": "opc.client.edgeai.output.anomalydetector_pressure_v1" // Specific topic for this model's output
      }
    ],
    "DefaultPredictionIntervalMs": 5000
  },
  "DataHandling": {
    "BufferCapacity": 10000,
    "TransmissionBatchSize": 100,
    "ValidationRules": [
      {
        "TagId": "Sim.PressureSensor1",
        "RuleType": "RangeCheck",
        "ParameterJson": "{\"Min\": 0.0, \"Max\": 1000.0}",
        "Enabled": true
      },
      {
        "TagId": "Sim.TemperatureSensor1",
        "RuleType": "DataTypeCheck",
        "ParameterJson": "{\"ExpectedType\": \"System.Double\"}",
        "Enabled": true
      }
    ]
  },
  "WriteLimits": {
    "DefaultPolicy": {
        "RateLimitingEnabled": false,
        "MaxWritesPerMinute": 10,
        "ValueChangeThresholdEnabled": false,
        "MinValueChangePercentage": 0.0, // 0 means any change
        "RequireConfirmationBelowThreshold": false
    },
    "TagSpecificPolicies": [
      {
        "TagId": "Control.Valve.Setpoint", // Example critical tag
        "RateLimitingEnabled": true,
        "MaxWritesPerMinute": 2,
        "ValueChangeThresholdEnabled": true,
        "MinValueChangePercentage": 5.0, // Requires at least 5% change to write without confirmation
        "RequireConfirmationBelowThreshold": true
      }
    ]
  },
  "Resilience": {
    "OpcConnectionRetry": {
      "MaxRetries": 5,
      "InitialDelayMs": 1000,
      "MaxDelayMs": 30000,
      "BackoffFactor": 2.0
    },
    "ServerCommunicationRetry": {
      "MaxRetries": 3,
      "InitialDelayMs": 500,
      "MaxDelayMs": 10000,
      "BackoffFactor": 2.0
    }
  }
}