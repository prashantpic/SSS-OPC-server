{
  "Serilog": {
    "MinimumLevel": {
      "Default": "Information",
      "Override": {
        "Microsoft": "Warning",
        "System": "Warning",
        "Opc.Ua": "Warning"
      }
    },
    "WriteTo": [
      {
        "Name": "Console"
      },
      {
        "Name": "File",
        "Args": {
          "path": "Logs/opc-client-service-.log",
          "rollingInterval": "Day",
          "retainedFileCountLimit": 7,
          "outputTemplate": "{Timestamp:yyyy-MM-dd HH:mm:ss.fff zzz} [{Level:u3}] {Message:lj}{NewLine}{Exception}"
        }
      }
    ],
    "Enrich": [ "FromLogContext", "WithMachineName", "WithProcessId", "WithThreadId" ],
    "Properties": {
      "Application": "IndustrialAutomation.OpcClient"
    }
  },
  "OpcClient": {
    "ClientId": "EdgeDevice001",
    "ServerConnections": [
      {
        "ServerId": "LocalOpcUaServer",
        "Standard": "Ua",
        "EndpointUrl": "opc.tcp://localhost:4840/UA/SampleServer",
        "SecurityPolicyUri": "http://opcfoundation.org/UA/SecurityPolicy#Basic256Sha256",
        "MessageSecurityMode": "SignAndEncrypt", // None, Sign, SignAndEncrypt
        "UserIdentityType": "Anonymous", // Anonymous, UserName, Certificate
        "Username": "",
        "Password": ""
      },
      {
        "ServerId": "SimulatedDaServer",
        "Standard": "Da",
        "EndpointUrl": "opcda://localhost/Matrikon.OPC.Simulation.1", // Example, actual format depends on DA SDK
        "Username": "",
        "Password": ""
      }
    ],
    "TagImport": {
      "FilePath": "Config/tags.csv",
      "FileType": "CSV" // CSV, XML
    },
    "Subscriptions": { // Default UA Subscription settings, can be overridden per subscription
      "DefaultPublishingInterval": 1000,
      "DefaultLifetimeCount": 300, // 300 * 1000ms = 5 minutes
      "DefaultMaxKeepAliveCount": 10,
      "DefaultMaxNotificationsPerPublish": 0, // 0 for no limit
      "DefaultPublishingEnabled": true,
      "DefaultPriority": 0
    }
  },
  "ServerApp": {
    "CommunicationMethod": "Grpc", // Grpc, RabbitMq, Kafka
    "GrpcEndpoint": "https://localhost:7001",
    "MessageQueue": {
      "RabbitMq": {
        "ConnectionString": "amqp://guest:guest@localhost:5672/",
        "RealtimeDataTopic": "opc.realtime.data",
        "HistoricalDataTopic": "opc.historical.data",
        "AlarmEventTopic": "opc.alarm.event",
        "CriticalWriteLogTopic": "opc.critical.write",
        "AuditEventTopic": "opc.audit.event",
        "SubscriptionStatusTopic": "opc.subscription.status",
        "AiOutputTopic": "opc.ai.output",
        "UseSsl": false,
        "ServerName": "localhost" // Required if UseSsl is true and server cert is self-signed/different
      },
      "Kafka": {
        "BrokerList": "localhost:9092",
        "RealtimeDataTopic": "opc.realtime.data",
        "HistoricalDataTopic": "opc.historical.data",
        "AlarmEventTopic": "opc.alarm.event",
        "CriticalWriteLogTopic": "opc.critical.write",
        "AuditEventTopic": "opc.audit.event",
        "SubscriptionStatusTopic": "opc.subscription.status",
        "AiOutputTopic": "opc.ai.output",
        "SecurityProtocol": "Plaintext", // Plaintext, Ssl, SaslSsl, SaslPlaintext
        "SslCaLocation": "", // Path to CA certificate
        "SaslMechanism": "", // Gssapi, Plain, ScramSha256, ScramSha512
        "SaslUsername": "",
        "SaslPassword": ""
      }
    }
  },
  "EdgeAI": {
    "ModelPath": "Models/",
    "ActiveModelName": "AnomalyDetectionModel",
    "ActiveModelVersion": "1.0.0",
    "PredictionIntervalMs": 5000
  },
  "DataHandling": {
    "BufferCapacity": 10000,
    "TransmissionBatchSize": 100,
    "ValidationRules": [
      {
        "TagId": "SimulatedDaServer.Random.Int1", // Example: this TagId might map to a TagDefinitionDto.TagId
        "RuleType": "RangeCheck",
        "ParameterJson": "{\"Min\": 0, \"Max\": 100}",
        "Enabled": true
      },
      {
        "TagId": "LocalOpcUaServer.CTT.Scalar.Integer.Int32",
        "RuleType": "DataTypeCheck",
        "ParameterJson": "{\"ExpectedType\": \"System.Int32\"}",
        "Enabled": true
      }
    ]
  },
  "WriteLimits": [
    {
      "TagId": "SimulatedDaServer.Random.Int1", // Example: this TagId might map to a TagDefinitionDto.TagId
      "RateLimitingEnabled": true,
      "MaxWritesPerMinute": 5,
      "ValueChangeThresholdEnabled": false,
      "MinValueChangePercentage": 0,
      "RequireConfirmationBelowThreshold": false
    }
  ]
}