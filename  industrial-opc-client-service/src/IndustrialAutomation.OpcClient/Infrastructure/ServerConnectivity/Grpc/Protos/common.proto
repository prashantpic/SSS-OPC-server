syntax = "proto3";

option csharp_namespace = "IndustrialAutomation.OpcClient.Infrastructure.ServerConnectivity.Grpc.Generated";

package GrpcCommon;

message StatusResponse {
    bool success = 1;
    string message = 2;
    int32 code = 3; // Optional: HTTP-like status code or custom error code
}

message EmptyRequest {
}

message EmptyResponse {
}

// Common data types that might be shared
message Timestamp {
    int64 seconds = 1;
    int32 nanos = 2;
}

message OpcQuality {
    uint32 code = 1; // OPC UA StatusCode
    string symbol = 2; // e.g., "Good", "Bad_NodeIdUnknown"
}

message OpcValue {
    // Using google.protobuf.Value for dynamic values.
    // Alternatively, define specific types if known and limited.
    // For simplicity, oneof can be used for common types.
    oneof value_type {
        double double_value = 1;
        float float_value = 2;
        int32 int32_value = 3;
        int64 int64_value = 4;
        uint32 uint32_value = 5;
        uint64 uint64_value = 6;
        bool bool_value = 7;
        string string_value = 8;
        bytes bytes_value = 9;
        // Add google.protobuf.Timestamp if using that instead of custom above
    }
}

message OpcPoint {
    string tag_id = 1;
    OpcValue value = 2;
    Timestamp timestamp = 3;
    OpcQuality quality = 4;
}