{
  "Serilog": {
    "MinimumLevel": {
      "Default": "Information",
      "Override": {
        "Microsoft": "Warning",
        "System": "Warning"
      }
    },
    "WriteTo": [
      {
        "Name": "Console"
      },
      {
        "Name": "File",
        "Args": {
          "path": "Logs/integration-service-.log",
          "rollingInterval": "Day",
          "outputTemplate": "{Timestamp:yyyy-MM-dd HH:mm:ss.fff zzz} [{Level:u3}] {Message:lj}{NewLine}{Exception}"
        }
      }
    ],
    "Enrich": [
      "FromLogContext",
      "WithMachineName",
      "WithThreadId"
    ],
    "Properties": {
      "Application": "IntegrationService"
    }
  },
  "AllowedHosts": "*",
  "Kestrel": {
    "Endpoints": {
      "Http": {
        "Url": "http://localhost:5005"
      },
      "Https": {
        "Url": "https://localhost:5006"
      }
    }
  },
  "OpenTelemetry": {
    "Exporter": {
      "Otlp": {
        "Endpoint": "http://localhost:4317" // OTLP gRPC endpoint
      }
    },
    "ServiceName": "IntegrationService"
  },
  "IntegrationSettings": {
    "MessageBroker": {
      "HostName": "localhost",
      "Port": 5672,
      "UserName": "guest",
      "Password": "guest", // Use secure credential management for production
      "VirtualHost": "/",
      "OpcDataInputQueueName": "opc_data_integration_queue",
      "CommandOutputQueueName": "opc_command_queue" // Example for sending commands back
    },
    "IoTPlatformSettings": {
      "Platforms": [
        {
          "Id": "mqtt-platform-1",
          "Type": "MQTT",
          "Endpoint": "mqtt://localhost:1883",
          "Authentication": {
            "CredentialIdentifier": "mqttPlatform1Credentials", // Points to an entry in SecureCredentialService
            "Username": "user", // Optional, if not in secure store
            "ClientId": "integration-service-mqtt-client"
          },
          "DataFormat": "JSON",
          "MappingRuleId": "SamplePlatformMapping",
          "DefaultPublishTopic": "telemetry/devices/{deviceId}",
          "CommandSubscriptionTopic": "commands/devices/+/+/+", // Example: commands/devices/{deviceId}/commandName/{commandId}
          "CommandResponseTopicTemplate": "commands/response/devices/{deviceId}/{commandName}/{correlationId}"
        },
        {
          "Id": "amqp-platform-1",
          "Type": "AMQP",
          "Endpoint": "amqp://localhost:5672", // Or full connection string
          "Authentication": {
            "CredentialIdentifier": "amqpPlatform1Credentials"
          },
          "DataFormat": "JSON",
          "MappingRuleId": "AmqpPlatformMapping",
          "TargetEntityPath": "iot-data-hub" // e.g., Event Hub name or Queue name
        },
        {
          "Id": "http-platform-1",
          "Type": "HTTP",
          "Endpoint": "https://api.iotplatform.com/v1/data",
          "Authentication": {
            "CredentialIdentifier": "httpPlatform1Credentials", // For API Key or Token
            "AuthScheme": "Bearer" // or "ApiKey"
          },
          "DataFormat": "JSON",
          "MappingRuleId": "HttpPlatformMapping"
        }
      ]
    },
    "BlockchainSettings": {
      "RpcUrl": "http://localhost:8545", // Ganache or private node
      "ChainId": 1337,
      "SmartContractAddress": "0xYourSmartContractAddressHere",
      "SmartContractAbiPath": "Adapters/Blockchain/SmartContracts/CriticalDataLog.abi.json",
      "CredentialIdentifier": "blockchainSignerCredentials", // Private key for signing transactions
      "GasPriceStrategy": "Medium", // "Low", "Medium", "High", or specific Gwei value
      "MaxGas": 300000,
      "CriticalDataCriteria": [
        // Define rules here, e.g., specific tag IDs, value thresholds, or event types
        {
          "SourceSystem": "OPC_UA_Server_1",
          "TagIdPattern": "Critical.*",
          "Severity": "High"
        }
      ],
      "AsyncProcessingQueueName": "blockchain_processing_queue"
    },
    "DigitalTwinSettings": {
      "Twins": [
        {
          "Id": "dt-instance-1",
          "Endpoint": "https://your-digital-twin-instance.api.wus2.digitaltwins.azure.net", // Example for Azure Digital Twins
          "CredentialIdentifier": "digitalTwin1Credentials", // For Service Principal or Managed Identity
          "SyncFrequencySeconds": 300,
          "DigitalTwinModelId": "dtmi:com:example:Thermostat;1",
          "MappingRuleId": "DigitalTwinThermostatMapping"
        }
      ]
    },
    "ResiliencySettings": {
      "DefaultRetry": {
        "RetryAttempts": 3,
        "RetryDelaySeconds": 2,
        "BackoffType": "Exponential" // "Constant", "Linear", "Exponential"
      },
      "DefaultCircuitBreaker": {
        "ExceptionsAllowedBeforeBreaking": 5,
        "DurationOfBreakSeconds": 30
      }
    },
    "SecuritySettings": {
      "CredentialManager": {
        "Type": "Environment", // "Environment", "AzureKeyVault", "LocalFile" (dev only)
        "VaultUri": "https://yourkeyvault.vault.azure.net/", // For AzureKeyVault
        "LocalFilePath": "secure-credentials.dev.json" // For LocalFile (dev only)
      }
    },
    "IntegrationServiceMiscSettings": {
      "EnableMqttIntegration": true,
      "EnableAmqpIntegration": false,
      "EnableHttpIoTIntegration": false,
      "EnableBlockchainLogging": true,
      "EnableDigitalTwinIntegration": true,
      "DataMappingPath": "Mappings" // Relative path to mapping rule files
    }
  }
}